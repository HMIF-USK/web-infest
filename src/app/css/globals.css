@import url("https://fonts.googleapis.com/css2?family=Imbue:opsz,wght@10..100,100..900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Geist:wght@100..900&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: "Cattedrale";
  src: url(/assets/fonts/Cattedrale-Demo-Regular.ttf) format("truetype");
}

@font-face {
  font-family: "Cattedrale-Outline";
  src: url(/assets/fonts/Cattedrale-Outline.ttf) format("truetype");
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@keyframes bg-spin {
  to {
    --border-angle: 1turn;
  }
}

.font-geist {
  font-family: "Geist", sans-serif;
}

.swiper-pagination-bullet {
  border: 1.6px solid rgba(253, 208, 38, 1);
}

.hero-swiper .swiper-button-next:after,
.hero-swiper .swiper-button-prev:after {
  display: none;
}

.swiper-slide {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 18px;
  font-size: 22px;
  font-weight: bold;
  color: #fff;
}

.floating-element {
  animation: float 3s ease-in-out infinite;
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }

  50% {
    transform: translateY(-14px);
  }
}

/* @keyframes textGlow {
  0% {
    text-shadow: 0 0 20px rgba(242, 233, 197, 0.3);
  }
  100% {
    text-shadow: 0 0 30px rgba(242, 233, 197, 0.6),
      0 0 40px rgba(184, 153, 38, 0.3);
  }
} */

@media only screen and (max-width: 1024px) {
  :root {
    --swiper-pagination-bottom: 1rem;
  }
}

@media only screen and (min-width: 769px) {
  .swiper-slide:first-child {
    transition: transform 100ms;
  }

  .swiper-slide:first-child img {
    transition: box-shadow 500ms;
  }

  .swiper-slide.swiper-slide-active:first-child {
    transform: translateX(0%);
    z-index: 2;
  }

  .swiper-slide.swiper-slide-active:first-child img {
    box-shadow: 0px 32px 80px rgba(0, 0, 0, 0.35);
  }

  .swiper-slide:nth-child(2) {
    transition: transform 100ms;
  }

  .swiper-slide.swiper-slide-next:nth-child(2) {
    transform: translateX(55%);
    z-index: 1;
  }

  .swiper[dir="rtl"] .swiper-slide.swiper-slide-active:first-child {
    transform: translateX(-50%);
  }

  .swiper[dir="rtl"] .swiper-slide.swiper-slide-next:nth-child(2) {
    transform: translateX(-55%);
  }
}

@media only screen and (min-width: 1024px) {
  .hero-swiper .swiper-button-next,
  .hero-swiper .swiper-button-prev {
    background: url("/assets/images/arrow.webp") no-repeat center;
    background-size: 4rem;
    display: flex;
    align-items: center;
    justify-content: center;
    padding-right: 20rem;
    z-index: 10;
  }

  .hero-swiper .swiper-button-prev {
    transform: rotate(180deg);
  }

  .swiper-button-prev:hover {
    opacity: 0.6;
    transition-duration: 200ms;
  }

  .swiper-button-next:hover {
    opacity: 0.6;
    transition-duration: 200ms;
  }
}

/* ROTATING BORDER ANIMATION */
.box {
  width: 100%;
  place-content: center;
  color: white;

  --border-angle: 0turn;
  --main-bg: conic-gradient(
    from var(--border-angle),
    #0a1214,
    #0a1214 5%,
    #0a1214 60%,
    #0a1214 95%
  );

  border: solid 2px transparent;
  border-radius: 2em;
  --gradient-border: conic-gradient(
    from var(--border-angle),
    transparent 25%,
    #0a1214,
    #fdd026 99%,
    transparent
  );

  background: 
    /* // padding-box clip this background in to the overall element except the border. */
    var(--main-bg) padding-box,
    /* // border-box extends this background to the border space */
      var(--gradient-border) border-box,
    /* // Duplicate main background to fill in behind the gradient border. You can remove this if you want the border to extend "outside" the box background. */
      var(--main-bg) border-box;

  background-position: center center;

  animation: bg-spin 3s linear infinite;

  /* &:hover {
    background: #000000;
  } */
}

@property --border-angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0turn;
}

.container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  flex-wrap: wrap;
  justify-content: center;
}

.container--mobile {
  min-width: 32rem;
}

.container--small {
  max-width: 10rem;
  margin: 5rem 1rem 1rem;

  svg {
    fill: white;
  }
}

.container--inline {
  display: flex;
  flex-direction: row;
}

.glass-container {
  position: relative;
  display: flex;
  align-items: center;
  /* background: transparent; */
  /* border-radius: 2ryyem; */
  overflow: hidden;
  flex: 1 1 auto;
  box-shadow: 0 6px 6px rgba(0, 0, 0, 0.2), 0 0 20px rgba(0, 0, 0, 0.1);
  color: var(--lg-text);
  /* transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 2.2); */
}

.glass-container--rounded {
  border-radius: 3rem;
}

.glass-container--large {
  flex: 1 1 auto;
}

.glass-container--medium {
  flex: 1 1 auto;
}

.glass-container--small {
  flex: 0 1 auto;
}

.glass-overlay {
  z-index: 1;
  background: var(--lg-bg-color);
}

.glass-filter,
.glass-overlay,
.glass-specular {
  position: absolute;
  inset: 0;
  border-radius: inherit;
}

.glass-filter {
  z-index: 0;
  backdrop-filter: blur(4px);
  filter: url(#lensFilter) saturate(120%) brightness(1.15);
}

.glass-specular {
  z-index: 2;
  box-shadow: inset 1px 1px 0 var(--lg-highlight),
    inset 0 0 5px var(--lg-highlight);
}

.glass-content {
  position: relative;
  z-index: 3;
  display: flex;
  flex: 1 1 auto;
  gap: 1rem;
  flex-wrap: wrap;
}

.glass-content__link {
  margin-bottom: -1px;
  margin-top: 6px;
  transition: transform 0.2s ease-out;

  img {
    width: 78px;
  }
}

.glass-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  color: var(--lg-grey);
  transition: color 0.3s ease;
  cursor: pointer;
}

.glass-item svg {
  fill: var(--lg-grey);
  height: 50px;
  margin-bottom: 0.25rem;
  filter: drop-shadow(0 0 3px rgba(255 255 255 / 0.25));
  transition: transform 0.25s ease-out;
}

.glass-item--active {
  background: rgba(0, 0, 0, 0.25);
  color: var(--lg-red);
  margin: -8px -40px;
  padding: 0.5rem 2.5rem;
  border-radius: 3rem;
}

.glass-item--active svg {
  fill: var(--lg-red);
}

.perspective-left {
  transform: rotateY(34deg);
}

.perspective-right {
  transform: rotateY(-34deg);
}

.text-glow {
  text-shadow: 0 0 20px rgba(242, 233, 197, 0.6);
}

@keyframes pulse-slow {
  0%, 100% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 0.6;
    transform: scale(1.05);
  }
}

@keyframes pulse-slower {
  0%, 100% {
    opacity: 0.2;
    transform: scale(0.95);
  }
  50% {
    opacity: 0.5;
    transform: scale(1.1);
  }
}

@keyframes ping-slow {
  0% {
    transform: scale(1);
    opacity: 0.4;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.2;
  }
  100% {
    transform: scale(1.2);
    opacity: 0;
  }
}

@keyframes breathe {
  0%, 100% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 0.7;
    transform: scale(1.15);
  }
}

@keyframes spin-slow {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes reverse-spin-slow {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

@keyframes twinkle {
  0%, 100% { 
    opacity: 0; 
    transform: scale(0.5);
  }
  50% { 
    opacity: 1; 
    transform: scale(1.2);
  }
}

@keyframes twinkle-delayed {
  0%, 100% { 
    opacity: 0; 
    transform: scale(0.3);
  }
  60% { 
    opacity: 1; 
    transform: scale(1);
  }
}

@keyframes twinkle-slow {
  0%, 100% { 
    opacity: 0; 
    transform: scale(0.8);
  }
  40% { 
    opacity: 0.8; 
    transform: scale(1.5);
  }
}

@keyframes twinkle-fast {
  0%, 100% { 
    opacity: 0; 
    transform: scale(0.2);
  }
  30% { 
    opacity: 1; 
    transform: scale(1);
  }
}

@keyframes float-1 {
  0%, 100% {
    transform: translate(20px, 30px) rotate(0deg);
    opacity: 0.3;
  }
  33% {
    transform: translate(80px, -20px) rotate(120deg);
    opacity: 0.8;
  }
  66% {
    transform: translate(-30px, 50px) rotate(240deg);
    opacity: 0.5;
  }
}

@keyframes float-2 {
  0%, 100% {
    transform: translate(-40px, 20px) rotate(0deg);
    opacity: 0.4;
  }
  25% {
    transform: translate(60px, -40px) rotate(90deg);
    opacity: 0.9;
  }
  75% {
    transform: translate(10px, 70px) rotate(270deg);
    opacity: 0.6;
  }
}

@keyframes float-3 {
  0%, 100% {
    transform: translate(60px, -10px) rotate(0deg);
    opacity: 0.2;
  }
  50% {
    transform: translate(-50px, 40px) rotate(180deg);
    opacity: 0.7;
  }
}

@keyframes float-4 {
  0%, 100% {
    transform: translate(-20px, -30px) rotate(0deg);
    opacity: 0.5;
  }
  40% {
    transform: translate(40px, 60px) rotate(144deg);
    opacity: 0.9;
  }
  80% {
    transform: translate(-60px, 10px) rotate(288deg);
    opacity: 0.3;
  }
}

/* Utility classes untuk Tailwind */
.animate-pulse-slow {
  animation: pulse-slow 4s ease-in-out infinite;
}

.animate-pulse-slower {
  animation: pulse-slower 6s ease-in-out infinite;
}

.animate-ping-slow {
  animation: ping-slow 3s cubic-bezier(0, 0, 0.2, 1) infinite;
}

.animate-breathe {
  animation: breathe 3s ease-in-out infinite;
}

.animate-spin-slow {
  animation: spin-slow 20s linear infinite;
}

.animate-reverse-spin-slow {
  animation: reverse-spin-slow 15s linear infinite;
}

.animate-twinkle {
  animation: twinkle 2s ease-in-out infinite;
}

.animate-twinkle-delayed {
  animation: twinkle-delayed 2.5s ease-in-out infinite 0.5s;
}

.animate-twinkle-slow {
  animation: twinkle-slow 3s ease-in-out infinite 1s;
}

.animate-twinkle-fast {
  animation: twinkle-fast 1.5s ease-in-out infinite 1.5s;
}

.animate-float-1 {
  animation: float-1 8s ease-in-out infinite;
}

.animate-float-2 {
  animation: float-2 10s ease-in-out infinite 2s;
}

.animate-float-3 {
  animation: float-3 12s ease-in-out infinite 4s;
}

.animate-float-4 {
  animation: float-4 9s ease-in-out infinite 6s;
}

/* Gradient utilities */
.bg-gradient-radial {
  background: radial-gradient(circle, var(--tw-gradient-stops));
}